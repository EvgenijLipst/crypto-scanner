const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();

async function fixPostgresSchema() {
  const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: process.env.DATABASE_URL?.includes('localhost') ? false : { rejectUnauthorized: false }
  });

  try {
    console.log('üîÑ Connecting to database...');
    await pool.connect();
    console.log('‚úÖ Database connected');

    // –ß–∏—Ç–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ö–µ–º—É
    const schemaPath = path.join(__dirname, 'schema.sql');
    const schema = fs.readFileSync(schemaPath, 'utf8');

    console.log('üîÑ Applying schema updates...');
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ö–µ–º—É (IF NOT EXISTS –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç –æ—à–∏–±–∫–∏)
    await pool.query(schema);
    
    console.log('‚úÖ Schema applied successfully');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
    const result = await pool.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      ORDER BY table_name;
    `);

    console.log('üìä Existing tables:');
    result.rows.forEach(row => {
      console.log(`  - ${row.table_name}`);
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º coin_data —Ç–∞–±–ª–∏—Ü—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ
    const coinDataCheck = await pool.query(`
      SELECT column_name, data_type 
      FROM information_schema.columns 
      WHERE table_name = 'coin_data' 
      ORDER BY ordinal_position;
    `);

    if (coinDataCheck.rows.length > 0) {
      console.log('‚úÖ coin_data table structure:');
      coinDataCheck.rows.forEach(row => {
        console.log(`  - ${row.column_name}: ${row.data_type}`);
      });
    } else {
      console.log('‚ùå coin_data table not found');
    }

    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    console.log('üßπ Cleaning up old data...');
    await pool.query(`DELETE FROM coin_data WHERE updated_at < NOW() - INTERVAL '2 days';`);
    
    console.log('‚úÖ Database schema fix completed successfully');

  } catch (error) {
    console.error('‚ùå Error fixing database schema:', error);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    if (error.message.includes('already exists')) {
      console.log('‚ÑπÔ∏è  This error is expected if constraints already exist');
      console.log('‚úÖ Schema is likely already up to date');
    }
  } finally {
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
fixPostgresSchema().catch(console.error); 