const { exec } = require('child_process');
const util = require('util');
const execAsync = util.promisify(exec);

async function forceDeploy() {
  console.log('üöÄ STARTING FORCE DEPLOY WITH CACHE CLEAR...');
  
  try {
    // 1. –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º TypeScript
    console.log('üî® Building TypeScript...');
    await execAsync('npm run build');
    console.log('‚úÖ TypeScript compiled');

    // 2. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å git
    console.log('üìã Current git status:');
    const { stdout: gitStatus } = await execAsync('git status --porcelain');
    if (gitStatus.trim()) {
      console.log('Modified files:');
      console.log(gitStatus);
      
      // 3. –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
      console.log('üì§ Adding all changes to git...');
      await execAsync('git add .');
      
      // 4. –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
      const commitMessage = `Fix token_mint issue with enhanced diagnostics - ${new Date().toISOString()}`;
      console.log(`üìù Committing changes: ${commitMessage}`);
      await execAsync(`git commit -m "${commitMessage}"`);
      
      // 5. –ü—É—à–∏–º –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      console.log('üöÄ Pushing to repository...');
      await execAsync('git push origin main');
      console.log('‚úÖ Changes pushed to repository');
      
      console.log('\nüéâ FORCE DEPLOY COMPLETED!');
      console.log('üìã Railway should automatically redeploy with the new code');
      console.log('‚è±Ô∏è  Wait 2-3 minutes for deployment to complete');
      console.log('üì± Check Telegram for new diagnostic messages');
      
    } else {
      console.log('‚ÑπÔ∏è  No changes to commit');
    }

  } catch (error) {
    console.error('‚ùå FORCE DEPLOY FAILED:', error.message);
    if (error.stdout) console.log('STDOUT:', error.stdout);
    if (error.stderr) console.log('STDERR:', error.stderr);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π
forceDeploy().catch(console.error); 